#Step 1: Importing the Libraries

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
#Step 2: Importing the dataset

dataset = pd.read_csv('iris.csv')
X = dataset.iloc[:,:4].values
y = dataset['variety'].values
dataset.head(5)
sepal.length	sepal.width	petal.length	petal.width	variety
0	5.1	3.5	1.4	0.2	Setosa
1	4.9	3.0	1.4	0.2	Setosa
2	4.7	3.2	1.3	0.2	Setosa
3	4.6	3.1	1.5	0.2	Setosa
4	5.0	3.6	1.4	0.2	Setosa
#Step 3: Splitting the dataset into the Training set and Test set

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)
#Step 4: Feature Scaling

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)
#Step 5: Training the Naive Bayes Classification model on the Training Set

from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(X_train, y_train)
GaussianNB()
#Step 6: Predicting the Test set results

y_pred = classifier.predict(X_test) 
y_pred
array(['Virginica', 'Setosa', 'Setosa', 'Versicolor', 'Virginica',
       'Setosa', 'Versicolor', 'Versicolor', 'Virginica', 'Virginica',
       'Setosa', 'Versicolor', 'Versicolor', 'Versicolor', 'Virginica',
       'Versicolor', 'Setosa', 'Virginica', 'Versicolor', 'Setosa',
       'Setosa', 'Setosa', 'Versicolor', 'Versicolor', 'Virginica',
       'Virginica', 'Virginica', 'Versicolor', 'Setosa', 'Versicolor'],
      dtype='<U10')
#Step 7: Confusion Matrix and Accuracy

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
from sklearn.metrics import accuracy_score 
print ("Accuracy : ", accuracy_score(y_test, y_pred))
cm
Accuracy :  0.9333333333333333
array([[ 9,  0,  0],
       [ 0, 11,  1],
       [ 0,  1,  8]], dtype=int64)
#Step 8: Comparing the Real Values with Predicted Values

df = pd.DataFrame({'Real Values':y_test, 'Predicted Values':y_pred})
df
Real Values	Predicted Values
0	Virginica	Virginica
1	Setosa	Setosa
2	Setosa	Setosa
3	Versicolor	Versicolor
4	Virginica	Virginica
5	Setosa	Setosa
6	Versicolor	Versicolor
7	Versicolor	Versicolor
8	Versicolor	Virginica
9	Virginica	Virginica
10	Setosa	Setosa
11	Versicolor	Versicolor
12	Versicolor	Versicolor
13	Versicolor	Versicolor
14	Virginica	Virginica
15	Versicolor	Versicolor
16	Setosa	Setosa
17	Virginica	Virginica
18	Versicolor	Versicolor
19	Setosa	Setosa
20	Setosa	Setosa
21	Setosa	Setosa
22	Virginica	Versicolor
23	Versicolor	Versicolor
24	Virginica	Virginica
25	Virginica	Virginica
26	Virginica	Virginica
27	Versicolor	Versicolor
28	Setosa	Setosa
29	Versicolor	Versicolor
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
X,y=load_iris(return_X_y=True)
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.5,random_state=0)
gnb=GaussianNB()
y_pred=gnb.fit(X_train,y_train).predict(X_test)
print(y_pred)
[2 1 0 2 0 2 0 1 1 1 1 1 1 1 1 0 1 1 0 0 2 1 0 0 2 0 0 1 1 0 2 1 0 2 2 1 0
 1 1 1 2 0 2 0 0 1 2 2 1 2 1 2 1 1 2 1 1 2 1 2 1 0 2 1 1 1 1 2 0 0 2 1 0 0
 1]
x_new=[[5,5,4,4]]
y_new=gnb.fit(X_train,y_train).predict(x_new)
print("predicted output for [[5,5,4,4]]:",y_new)
predicted output for [[5,5,4,4]]: [2]
print("Naive bayes score :",gnb.score(X_test,y_test))
Naive bayes score : 0.9466666666666667
